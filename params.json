{"name":"Trabalho 0: Elton Couto, Junior Martins","tagline":"","body":"Trabalho desenvolvido utilizando a linguagem de programação C++, aplicando os padrões de projeto fábrica abstrata (abstract factory) e builder.\r\n\r\n**Fábrica abstrata:** este padrão fornece uma interface para criação de famílias de objetos relacionados ou dependentes sem especificar suas classes concretas.\r\n\r\n**Quando usar Abstract Factory?**\r\n\r\nUse o padrão Abstract Factory quando: \r\n\r\n* Um sistema deve ser independente de como seus produtos são criados, compostos ou representados;\r\n* Um sistema deve ser configurado como um produto de uma família de múltiplos produtos;\r\n* Uma família de objetos for projetada para ser usada em conjunto, e você necessita garantir esta restrição;\r\n* Você quer fornecer uma biblioteca de classes e quer revelar somente suas interfaces, não suas implementações.\r\n\r\n**Builder**\r\nÉ uma interface que define os passos para criação do produto.\r\nO objetivo do Builder é permitir separar a construção do objeto e sua representação, possibilitando a construção passo-passo do objeto. \r\nNo padrão Builder temos uma interface comum para todos os objetos que constroem outros objetos. Essa interface é que define todos os passos necessários para construir um objeto.\r\n\r\n\r\nO padrão Builder é muitas vezes comparado com o padrão Abstract Factory pois ambos podem ser utilizados para a construção de objetos complexos. A principal diferença entre eles é que o Builder constrói objetos complexos passo a passo e o Abstract Factory constrói famílias de objetos, simples ou complexos, de uma só vez.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}